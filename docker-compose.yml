version: '3.8'

services:
  backend:
    build:
      context: .                 # <<< coloque o contexto no root
      dockerfile: Dockerfile.backend
    image: opgranel_backend_image
    container_name: opgranel_backend_container
    working_dir: /app
    command: node index.js
    shm_size: "1gb"
    # user: "pptruser"          # opcional, se quiser forçar
    volumes:
      - ./server/Files/Notas_Fiscais:/app/server/Files/Notas_Fiscais
    ports:
      - "3009:3009"
    environment:
      DB_HOST: mysql            # <<< use o serviço interno
      DB_PORT: 3306
      DB_USER: ogdev
      DB_PASSWORD: "R0dr!m@rR##T"
      DB_NAME: operacaogranel
      PORT: 3009
      TZ: America/Sao_Paulo
    depends_on:
      mysql:
        condition: service_healthy
    restart: unless-stopped

  frontend:
    build:
      context: .                 # <<< idem: use o root
      dockerfile: Dockerfile.frontend
    image: opgranel_frontend_image
    container_name: opgranel_frontend_container
    ports:
      - "3008:3008"
    environment:
      REACT_APP_SERVER: http://31.97.20.141:3009
      PORT: 3008
      TZ: America/Sao_Paulo
    depends_on:
      - backend
    restart: unless-stopped


  mysql:
    image: mysql:8.0
    container_name: opgranel_mysql_container
    environment:
      MYSQL_ROOT_PASSWORD: R0dr!m@rR##T
      MYSQL_DATABASE: operacaogranel
      MYSQL_USER: ogdev
      MYSQL_PASSWORD: R0dr!m@rR##T
      MYSQL_LOG_BIN_TRUST_FUNCTION_CREATORS: 1
      TZ: America/Sao_Paulo
    volumes:
      - ./database/data:/var/lib/mysql
      - ./database/conf/my.cnf:/etc/mysql/conf.d/my.cnf
      - ./database/init:/docker-entrypoint-initdb.d/
    ports:
      - "3308:3306"   # host:container (acesso externo opcional em 3308)
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "127.0.0.1", "-uroot", "-pR0dr!m@rR##T"]
      interval: 10s
      timeout: 5s
      retries: 10
    restart: unless-stopped

networks:
  default:
    name: app-network
